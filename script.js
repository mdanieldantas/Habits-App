const form = document.querySelector("#form-habits")
const nlwSetup = new NLWSetup(form)
const button = document.querySelector("header button")

button.addEventListener("click", add)
form.addEventListener('change',save)

function add() {
  const today = new Date().toLocaleDateString('pt-br').slice(0, -5)
  const dayExists = nlwSetup.dayExists(today)

  if (dayExists) {
    alert('Dia j√° incluso üî¥')
    return
  }

  alert('Adicionado com sucesso ‚úÖ')
  nlwSetup.addDay(today)
}

function save(){
  localStorage.setItem('NLWSetup@habits', JSON.stringify(nlwSetup.data))
}



const data = JSON.parse(localStorage.getItem('NLWSetup@habits')) || {}
nlwSetup.setData(data)
nlwSetup.load()

/*
------Algoritmos e L√≥gica de programa√ß√£o----------

## O que √© programar? Programa√ß√£o nada mais √© do que ensinar o computador.
## Ensinar o computador

- Algoritmos
    
    Sequ√™ncia de passos, conjunto de regras
    
- L√≥gica de programa√ß√£o
    
    Maneira de pensar
    
- Sintaxe
    
    Maneira correta de escrever
    
--------- **Executando JavaScript**----------

Podemos executar diretamente no Navegador

- Ferramenta `DevTools`
    
    Apertando o atalho `F12` no seu teclado
    
- Plataformas online
    
    [fronteditor.dev](https://fronteditor.dev)
    [codepen.io](https://codepen.io)
    
- Projeto no computador
<!-- em um arquivo index.html -->
<!-- importamos um arquivo .js no .html -->
<script src="./script.js"></script>

------# Vari√°veis e Tipos de dados----------------

Facilitando as informa√ß√µes

---

## Vari√°veis

Uma caixinha onde guardamos um tipo de dado para usar mais tarde.

---

#------------# Tipos de dados -------------

Informa√ß√µes que podem ser em `textos`, `n√∫meros`, `booleanos` (valores l√≥gicos: verdadeiro ou falso) ou dados mais `estruturados`


Vari√°veis e Tipos de dados
// declaro e atribuo valor
let boasVindas = 'Fala, Dev!';

// reatribuo valor
boasVindas = `Fala, Dev! Tudo beleza?!`;

// constante n√£o pode mudar o valor
const serHumano = true;
serHumano = false // Erro!

#--------- Fun√ß√µes---------------

Agrupando e reutilizando o c√≥digo

---

## Fun√ß√µes

- Agrupamento de c√≥digo
- Reuso de c√≥digo
- Mini programas dentro do programa maior
- Toda linguagem oferece muitas op√ß√µes
// usando uma fun√ß√£o
alert('Fala, Dev!')

// criando uma fun√ß√£o
function alert(text) {
  return text
}

#---------- Objetos-----------------
√â tudo sobre Objetos
## Tudo √© objeto

- Atributos
    S√£o as propriedades de um objeto
    
- M√©todos
    S√£o as funcionalidades de um objeto
    // criando um objeto
const celular = {
  cor: 'preto',
  ligar: function() {}
}

// usando um objeto
celular.cor // preto
celular.ligar() // executa fun√ß√£o

------------# DOM-----------

Document Object Model

---

## Document Object Model - DOM

√â a modelagem dos nossos elementos HTML em Objeto JavaScript 

---

##----------Document-------

Posso controlar minha p√°gina, meu documento HTML, pelo JavaScript, atrav√©s do objeto `document`

document // objeto que existe em todo navegador
.querySelector('a') // seleciona a tag a
.click() // d√° a ordem de clicar na tag a




const celular = {
  cor: 'preto',
  ligar: function () {
    const mensagem = "Ligando"
    alert(mensagem)
  }

}
celular.ligar()



*/